name: render-documentation
on:
  push:
    branches: [ main ]

jobs:
  render-documentation:
    runs-on: ubuntu-latest
    name: render-documentation ${{ github.event.client_payload.vendor }}/${{ github.event.client_payload.name }}
    steps:
      - name: Render Repository
        uses: TYPO3-Documentation/gh-render-action@main
        id: rendering
        with:
          repository_url: https://github.com/$GITHUB_REPOSITORY
          source_branch: main
          target_branch_directory: main

      - name: Archive render result
        run: |
          pushd ${{ steps.rendering.outputs.renderedPath }}
          zip rendered-docs.zip . -r
          popd
          mv ${{ steps.rendering.outputs.renderedPath }}/rendered-docs.zip .

      - name: Publish archive with result
        uses: actions/upload-artifact@v3
        with:
          name: result
          path: rendered-docs.zip
          if-no-files-found: error
  
  deploy:
    runs-on: ubuntu-latest
    name: Deploy ${{ github.event.client_payload.vendor }}/${{ github.event.client_payload.name }}
    needs: render-documentation
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: result

      - name: Extract render result
        run: unzip rendered-docs.zip -d result

      - name: Upload Documentation
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_DOCS_HOST }}
          username: ${{ secrets.DEPLOY_DOCS_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "result/"
          rm: true
          strip_components: 1
          tar_tmp_path: ${{ secrets.TMP_TARGET_PATH }}
          target: ${{ secrets.TARGET_PATH }}/${{ github.event.client_payload.type_short }}/${{ github.event.client_payload.vendor }}/${{ github.event.client_payload.name }}/${{ github.event.client_payload.target_branch_directory }}
